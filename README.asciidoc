== A command line calculator

The main goal is to write a simple command line calculator using
http://en.wikipedia.org/wiki/Test-driven_development[TDD] and taking as simple steps as I can.
So, there are going to be a lot of commits.

image:https://travis-ci.org/ffbit/command-line-calculator.png["Build Status",link="https://travis-ci.org/ffbit/command-line-calculator"]

=== Resources Links

- http://en.wikipedia.org/wiki/Tokenize[Tokenize]
- http://en.wikipedia.org/wiki/Infix_notation[Infix notation]
- http://en.wikipedia.org/wiki/Reverse_Polish_notation[Reverse Polish notation]
- http://scriptasylum.com/tutorials/infix_postfix/algorithms/infix-postfix/index.htm[Infix - Postfix]
- http://scriptasylum.com/tutorials/infix_postfix/algorithms/postfix-evaluation/index.htm[Postfix Evaluation]
- http://en.wikipedia.org/wiki/Operation_(mathematics%29[Operation (mathematics)]
- http://en.wikipedia.org/wiki/Operator_associativity[Operator associativity]
- http://en.wikipedia.org/wiki/Binary_operation[Binary operation]
- http://en.wikipedia.org/wiki/Unary_operation[Unary operation]
- http://en.wikipedia.org/wiki/Order_of_operations[Order of operations]
- http://en.wikipedia.org/wiki/S-expression[S-expression]
- http://en.wikipedia.org/wiki/Abstract_syntax_tree[Abstract syntax tree]
- http://www.hillside.net/plop/plop2003/Papers/Jones-ImplementingASTs.pdf[Abstract Syntax Tree Implementation Idioms]
- http://en.wikipedia.org/wiki/Parser[Parsing]
- http://en.wikipedia.org/wiki/Parse_tree[Parse tree]
- http://en.wikipedia.org/wiki/Recursive_descent_parser[Recursive descent parser]
- http://en.wikipedia.org/wiki/Shift-reduce_parser[Shift-reduce parser]
- http://en.wikipedia.org/wiki/Operator-precedence_parser[Operator-precedence parser]
- http://en.wikipedia.org/wiki/Shunting-yard_algorithm[Shunting-yard algorithm]
- http://www.kallisti.net.nz/blog/2008/02/extension-to-the-shunting-yard-algorithm-to-allow-variable-numbers-of-arguments-to-functions/[Extension to the ‘Shunting Yard’ algorithm to allow variable numbers of arguments to functions]
- http://en.wikipedia.org/wiki/Interpreter_(computing%29[Interpreter (computing)]
- http://prefuse.org/doc/api/prefuse/data/expression/parser/ExpressionParser.html[prefuse.data.expression.parser.ExpressionParser]
- http://docs.spring.io/spring/docs/3.0.x/reference/expressions.html[Spring Expression Language (SpEL)]
- https://github.com/spring-projects/spring-framework/blob/master/spring-expression/src/main/java/org/springframework/expression/spel/standard/Tokenizer.java[org.springframework.expression.spel.standard.Tokenizer]
- http://stackoverflow.com/questions/28256/equation-expression-parser-with-precedence[Equation (expression) parser with precedence?]
- http://stackoverflow.com/questions/114586/smart-design-of-a-math-parser[Smart design of a math parser?]
- http://stackoverflow.com/questions/4589951/parsing-an-arithmetic-expression-and-building-a-tree-from-it-in-java[Parsing an arithmetic expression and building a tree from it in Java]
- http://lukaszwrobel.pl/blog/math-parser-part-1-introduction[Math Parser, Part 1: Introduction]
- http://lukaszwrobel.pl/blog/math-parser-part-2-grammar[Math Parser, Part 2: Grammar]
- http://lukaszwrobel.pl/blog/math-parser-part-3-implementation[Math Parser, Part 3: Implementation]
- http://www.codeproject.com/Articles/345888/How-to-write-a-simple-interpreter-in-JavaScript[How to write a simple interpreter in JavaScript]
